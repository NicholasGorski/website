#! /bin/bash

# Synchronizes files by copying them from the specified location
# input:
# | foo/
# |     bar/
# |         a.txt: stuff/a
# |     b.txt: more/things/b
#
# output:
# | foo/bar/a.txt: /home/<user>/stuff/a
# |     cp $< $@
# |
# | foo/b.txt: /home/<user>/more/things/b
# |     cp $< $@
# |
# | sharebuild: foo/bar/a.txt foo/b.txt

echo '# makefile autogenerated by sync.sh'
DIR=()
FILES=()

while IFS= read line; do
    # count directory depth from indentation
    let 'offset = 0'
    while [[ "$line" =~ ^'    ' ]]; do
        let 'offset++'
        line="${line#    }"
    done
    if [[ "$line" =~ /$ ]]; then
        # append a new directory at the correct depth
        DIR[$offset]="$line"
    else
        # generate a new dependency from the current path prefix
        dir="$( echo -n "${DIR[@]:0:$offset}" | tr -d ' ' )"
        echo -n "$dir"
        echo "$line" | sed "s,: ,: $HOME/,"
        FILES+=( "$dir$( echo "$line" | cut -d: -f1 )" )
        echo -e "\tcp \$< \$@"
        echo
    fi
done < sharelist
echo "sharebuild: ${FILES[@]}"
